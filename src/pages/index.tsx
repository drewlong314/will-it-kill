import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState, useRef, useEffect } from 'react'


type VideoSet = {
    _id: any,
    video_1: string,
    video_2: string,
    answer: string,
    answer_no: number,
    answer_yes: number,
    total_answers: number,
}

export default function Home() {
    const [isQuestionHidden, setIsQuestionHidden] = useState(true)
    const [isNextHidden, setIsNextHidden] = useState(true)
    const [currentVideoSet, setCurrentVideoSet] = useState<VideoSet | null>(null)
    const [vidSrc, setVidSrc] = useState("")
    const [response, setResponse] = useState("")
    const [score, setScore] = useState(0)
    const videoPlayer = useRef<HTMLVideoElement>(null)

    useEffect(() => {
        fetch('api/movies')
            .then((res) => res.json())
            .then((data) => {
                setCurrentVideoSet(data)
            })
    }, [])

    useEffect(() => {
        if (currentVideoSet) {
            setVidSrc(currentVideoSet.video_1)
        }
    }, [currentVideoSet])

    const handlePause = (): void => {
        if (videoPlayer.current != null && currentVideoSet) {
            if (vidSrc === currentVideoSet.video_1 && videoPlayer.current.duration === videoPlayer.current.currentTime) setIsQuestionHidden(false)
            else if (vidSrc === currentVideoSet.video_2 && videoPlayer.current.duration === videoPlayer.current.currentTime) {
                if (response === currentVideoSet.answer) {
                    setIsNextHidden(false)
                    setScore(score + 1)
                }
                else if (response != currentVideoSet.answer) console.log('you lost')
            }
        }
    }

    const handleResponse = (res: string): void => {
        if (currentVideoSet) {
            setVidSrc(currentVideoSet.video_2)
            setIsQuestionHidden(true)
            setResponse(res)
            fetch('api/movies', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ _id: "63e81175dcdab266383a8154", response: res })
            })
        }
    }

    const handleNext = (): void => {
        // find a new video set here
        // setCurrentVideoSet(currentVideoSet?.video_1)
        setIsNextHidden(true)
    }

    return (
        <>
            <Head>
                <title>Will It Kill</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <div>Will It Kill?</div>
                <div>Score: {score}</div>
                <div onClick={handlePause}></div>
                {currentVideoSet && <video src={vidSrc} width={'1000px'} onPause={handlePause} ref={videoPlayer} autoPlay controls muted={true} />}
                <div hidden={isQuestionHidden}>
                    <div>Will it Kill?</div>
                    <button onClick={() => handleResponse("yes")}>Yes</button>
                    <button onClick={() => handleResponse("no")}>No</button>
                </div>
                <div hidden={isNextHidden}>
                    <button onClick={handleNext}>Next</button>
                </div>
            </main>
        </>
    )
}
